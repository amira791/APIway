# Generated by Django 5.0.2 on 2024-04-16 19:54

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_mapi', '0020_remove_api_pricingplans_api_logo_api_terms_of_use_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='admin',
            options={},
        ),
        migrations.AlterModelOptions(
            name='consommateur',
            options={},
        ),
        migrations.AlterModelOptions(
            name='fournisseur',
            options={},
        ),
        migrations.AlterModelManagers(
            name='admin',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='consommateur',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='fournisseur',
            managers=[
            ],
        ),
        migrations.RemoveField(
            model_name='admin',
            name='AdminEmail',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='AdminPassword',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='AdminUsername',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='user_ptr',
        ),
        migrations.RemoveField(
            model_name='api',
            name='pricingPlans',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CN_first_name',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CN_last_name',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CNemail',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CNpassword',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CNphone',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CNstatus',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='CNusername',
        ),
        migrations.RemoveField(
            model_name='consommateur',
            name='user_ptr',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FR_first_name',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FR_last_name',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FRemail',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FRpassword',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FRphone',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FRstatus',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='FRusername',
        ),
        migrations.RemoveField(
            model_name='fournisseur',
            name='user_ptr',
        ),
        migrations.AddField(
            model_name='admin',
            name='groups',
            field=models.ManyToManyField(to='auth.group'),
        ),
        migrations.AddField(
            model_name='admin',
            name='user_permissions',
            field=models.ManyToManyField(to='auth.permission'),
        ),
        migrations.AddField(
            model_name='api',
            name='logo',
            field=models.ImageField(null=True, upload_to='assets/images/', verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='api',
            name='terms_of_use',
            field=models.TextField(blank=True, help_text='Terms and conditions for API usage', verbose_name='Terms of Use'),
        ),
        migrations.AddField(
            model_name='api',
            name='visibility',
            field=models.BooleanField(default=False, null=True, verbose_name='Visibility'),
        ),
        migrations.AddField(
            model_name='api',
            name='website',
            field=models.TextField(blank=True, help_text='Base link for API ', verbose_name='Web Site'),
        ),
        migrations.AddField(
            model_name='consommateur',
            name='groups',
            field=models.ManyToManyField(to='auth.group'),
        ),
        migrations.AddField(
            model_name='consommateur',
            name='user_permissions',
            field=models.ManyToManyField(to='auth.permission'),
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='groups',
            field=models.ManyToManyField(to='auth.group'),
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='user_permissions',
            field=models.ManyToManyField(to='auth.permission'),
        ),
        migrations.CreateModel(
            name='UserBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='admin',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consommateur',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
